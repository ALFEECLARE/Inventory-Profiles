# This is a basic workflow to help you get started with Actions

name: "tagged-release"

# Controls when the action will run. 
on:
  push:
    tags:
      - "v*"
jobs:
  gh_tagged_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Install AdvZip
        run: sudo apt-get install advancecomp
      - name: Install Pandoc and Related
        run: wget "https://github.com/jgm/pandoc/releases/download/2.17.0.1/pandoc-2.17.0.1-1-amd64.deb"
      - run: sudo dpkg -i pandoc-2.17.0.1-1-amd64.deb
      - run: sudo apt-get -f install
      - run: pip install --user --upgrade --force panflute==2.0.5
      - run: pip install --user pypandoc==1.6.4
      - run: pip install --user --no-cache git+https://github.com/DCsunset/pandoc-include@v1.0.0
      - name: Create Release Notes
        run: pushd .; cd description; python3 build_release_notes.py; popd
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Grant execute permission for optimize-jar.sh
        run: chmod +x optimize-jar.sh
      - name: Build with Gradle
        env:
          CURSEFORGE_DEPOY_TOKEN: ${{ secrets.CURSEFORGE_DEPOY_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          IPNEXT_RELEASE: "yes"
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
        run: ./gradlew clean build publishModrinth publishToSonatype curseforge
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          body_path: description/out/pandoc-release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
